KMD
00000000:       ; 
00000000:       ; 
00000000:       ;         ORG  0
00000000:       ; 
00000000:       ;          ;; Reset all the lights to off.
00000000:       ;         
00000000: 1FFF  ;         STA &FFFF
00000001: 1FFF  ;         STA &0FFF
00000002: 1FFA  ;         STA &0FFA
00000003: 1FF9  ;         STA &0FF9
00000004: 1FF8  ;         STA &0FF8
00000005: 1FF7  ;         STA &0FF7
00000006: 1FF6  ;         STA &0FF6
00000007: 1FF5  ;         STA &0FF5
00000008:       ; 
00000008:       ; 
00000008:       ;         ;; ADD max                      ;  add max to ACC
00000008:       ;         ;; STA &0FFF            ;  store to memory &FF0
00000008:       ;         
00000008:       ;         
00000008:       ;         ;; ADD max              ;       Test store to memory
00000008:       ; 
00000008:       ;         ;; STA &0FFA
00000008:       ;         ;; STA &0FF9
00000008:       ;         ;; STA &0FF8
00000008:       ;         ;; STA &0FF7
00000008:       ;         ;; STA &0FF6
00000008:       ;         ;; STA &0FF5
00000008:       ;         ;; ;; STA &0FF4
00000008:       ; 
00000008:       ;         ;; SUB max
00000008:       ; 
00000008:       ;         ;; STA &0FFF
00000008:       ; 
00000008:       ;         ;; ADD traffics_on
00000008:       ;         ;; ;; ADD &07FF
00000008:       ;         ;; STA &0FFF
00000008:       ; 
00000008:       ; 
00000008:       ; ;; flash_4
00000008:       ; 
00000008:       ; ;;      ADD max                 ;  add max to ACC
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ;         
00000008:       ; ;;              LDA delay_max
00000008:       ; ;; loop_delay_4_0       sub one
00000008:       ; ;;              JNE loop_delay_4_0
00000008:       ;         
00000008:       ; ;;                      LDA delay_max
00000008:       ; ;; loop_delay_4_1               sub one
00000008:       ; ;;                      JNE loop_delay_4_0_1
00000008:       ;         
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ; 
00000008:       ; ;;                      LDA delay_max
00000008:       ; ;; loop_delay_4_1               sub one
00000008:       ; ;;                      JNE loop_delay_4_1
00000008:       ;         
00000008:       ; ;;                      LDA delay_max
00000008:       ; ;; loop_delay_4_2               sub one
00000008:       ; ;;                      JNE loop_delay_4_1_1
00000008:       ;         
00000008:       ; 
00000008:       ; 
00000008:       ; ;; flash_3
00000008:       ; 
00000008:       ; ;;      ADD max                 ;  add max to ACC
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ;         
00000008:       ; ;;              LDA delay_max
00000008:       ; ;; loop_delay_3_0       sub one
00000008:       ; ;;              JNE loop_delay_3_0
00000008:       ;         
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ; 
00000008:       ; ;;              LDA delay_max
00000008:       ; ;; loop_delay_3_1       sub one
00000008:       ; ;;              JNE loop_delay_3_1
00000008:       ;         
00000008:       ; 
00000008:       ; 
00000008:       ;         
00000008:       ; ;; flash_2
00000008:       ; 
00000008:       ; ;;      ADD max                 ;  add max to ACC
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ;         
00000008:       ; ;;              LDA delay_1
00000008:       ; ;; loop_delay_2_0       sub one
00000008:       ; ;;              JNE loop_delay_2_0
00000008:       ;         
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ; 
00000008:       ; ;;              LDA delay_1
00000008:       ; ;; loop_delay_2_1       sub one
00000008:       ; ;;              JNE loop_delay_2_1
00000008:       ; 
00000008:       ; 
00000008:       ;         
00000008:       ; 
00000008:       ; ;; flash_1
00000008:       ; 
00000008:       ; ;;      ADD max                 ;  add max to ACC
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ;         
00000008:       ; ;;              LDA delay_2
00000008:       ; ;; loop_delay_1_0       sub one
00000008:       ; ;;              JNE loop_delay_1_0
00000008:       ;         
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ; 
00000008:       ; ;;              LDA delay_2
00000008:       ; ;; loop_delay_1_1       sub one
00000008:       ; ;;              JNE loop_delay_1_1
00000008:       ; 
00000008:       ; 
00000008:       ; 
00000008:       ; ;; flash_0
00000008:       ; 
00000008:       ; ;;      ADD max                 ;  add max to ACC
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ;         
00000008:       ; ;;              LDA delay_1
00000008:       ; ;; loop_delay_0_0       sub one
00000008:       ; ;;              JNE loop_delay_0_0
00000008:       ;         
00000008:       ; ;;      STA &0FFF               ;  store to memory &0FFF
00000008:       ; 
00000008:       ; ;;              LDA delay_1
00000008:       ; ;; loop_delay_0_1       sub one
00000008:       ; ;;              JNE loop_delay_0_1
00000008:       ;         
00000008:       ; 
00000008:       ;         
00000008:       ; ;;      JMP flash_0
00000008:       ; 
00000008:       ;         
00000008:       ;         
00000008:       ; ;;      LDA delay
00000008:       ;         
00000008:       ; ;; loop SUB one
00000008:       ;         
00000008:       ; ;;      JNE loop
00000008:       ;         
00000008:       ; ;;      JMP main
00000008:       ;         
00000008:       ; 
00000008:       ; 
00000008: 7000  ;         stop    STP              ; STOP - HALT progr
00000009:       ; 
00000009: 4009  ;         done    JMP done         ; Just in case stop instr fails
0000000A:       ; 
0000000A:       ; 
0000000A: FFFF  ; test    DEFW &FFFF
0000000B:       ;         
0000000B: 0001  ; one     DEFW 1           ; one
0000000C: 7FFF  ; max     DEFW &7FFF       ; max ?
0000000D: 8000  ; neg     DEFW &8000       ; -max
0000000E: 0000  ; zero    DEFW &0000       ; zero
0000000F: 000F  ; delay   DEFW &000F       ; 16
00000010:       ;         
00000010: 2ABD  ; delay_1 DEFW &2ABD
00000011: 38FF  ; delay_2 DEFW &38FF
00000012: 7FFF  ; delay_max DEFW &7FFF
00000013:       ; 
00000013: 0FFF  ; traffic DEFW &0FFF
00000014:       ; 

Symbol Table: Labels
: stop                              00000008  Local --
: done                              00000009  Local --
: test                              0000000A  Local --
: one                               0000000B  Local --
: max                               0000000C  Local --
: neg                               0000000D  Local --
: zero                              0000000E  Local --
: delay                             0000000F  Local --
: delay_1                           00000010  Local --
: delay_2                           00000011  Local --
: delay_max                         00000012  Local --
: traffic                           00000013  Local --
